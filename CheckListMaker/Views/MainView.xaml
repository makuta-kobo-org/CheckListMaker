<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:helpers="clr-namespace:CheckListMaker.Helpers"
    xmlns:converter="clr-namespace:CheckListMaker.Converters"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:views="clr-namespace:CheckListMaker.ViewModels"
    xmlns:models="clr-namespace:CheckListMaker.Models"
    xmlns:resources="clr-namespace:CheckListMaker.Resources"
    xmlns:ads="clr-namespace:Plugin.MauiMTAdmob.Controls;assembly=Plugin.MauiMTAdmob"
    x:Class="CheckListMaker.Views.MainView"
    x:Name="MainViewContainer"
    x:DataType="views:MainViewModel"
    Shell.TabBarIsVisible="False">

    <ContentPage.Behaviors>
        <toolkit:EventToCommandBehavior Command="{Binding AppearingCommand}" EventName="Appearing"/>
    </ContentPage.Behaviors>

    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:BoolToColorConverter x:Key="BoolToColor" />
        </ResourceDictionary>
        <Style x:Key="TabbarButton" TargetType="Button">
            <Setter Property="BackgroundColor" Value="Transparent"/>
            <Setter Property="FontSize" Value="Micro" />
            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
            <Setter Property="ContentLayout" Value="Top, 0" />
            <Setter Property="CornerRadius" Value="0" />
            <Setter Property="VerticalOptions" Value="Center"/>
            <Setter Property="Padding" Value="0, 10, 0, 5" />
            <Setter Property="HeightRequest" Value="60" />
        </Style>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid
            ColumnDefinitions="*, *"
            Padding="0, 0, 10, 0">

            <Label Grid.Column="0"
                Text="Home"
                FontSize="Title"
                FontAttributes="Bold"
                VerticalOptions="Center"
                HorizontalOptions="Start"/>

            <HorizontalStackLayout Grid.Column="1" HorizontalOptions="End">

                <Label VerticalOptions="Center" Text="{x:Static resources:AppResource.Main_Label_Switch}" />

                <Switch
                    IsToggled="{Binding IsToggled, Mode=TwoWay}">
                    <Switch.Behaviors>
                        <toolkit:EventToCommandBehavior
                        Command="{Binding ChangeNumberOfColumnsCommand}"
                        EventName="Toggled"/>
                    </Switch.Behaviors>
                </Switch>
            </HorizontalStackLayout>

        </Grid>

    </Shell.TitleView>

    <Grid
        RowDefinitions="*,Auto,Auto"
        HorizontalOptions="Fill"
        VerticalOptions="Fill">

        <CollectionView Grid.Row="0"
            Margin="10"
            ItemsSource="{Binding CurrentCehckList.Items}"
            SelectionMode="None">

            <CollectionView.ItemsLayout>
                <GridItemsLayout
                    Orientation="Vertical"
                    Span="{Binding NumberOfColumns}" />
            </CollectionView.ItemsLayout>

            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <VerticalStackLayout>
                        <Border
                            Margin="5"
                            x:DataType="models:CheckItem"
                            Padding="5, 15"
                            StrokeShape="RoundRectangle 10"
                            BackgroundColor="{Binding IsChecked, Converter={StaticResource BoolToColor}}"
                            HorizontalOptions="Fill"
                            VerticalOptions="Fill">

                            <Grid ColumnDefinitions="*, 35">

                                <!--  Text  -->
                                <Label Grid.Column="0"
                                    x:Name="CheckItemText"
                                    HorizontalOptions="Fill"
                                    FontSize="Body"
                                    Text="{Binding ItemText}"
                                    VerticalTextAlignment="Center" />

                                <!--  Delete Icon  -->
                                <Image Grid.Column="1" VerticalOptions="Center" WidthRequest="25">

                                    <Image.GestureRecognizers>
                                        <TapGestureRecognizer
                                    Command="{Binding BindingContext.DeleteItemCommand, Source={x:Reference MainViewContainer}}"
                                    CommandParameter="{Binding .}"
                                            />
                                    </Image.GestureRecognizers>

                                    <Image.Source>
                                        <FontImageSource
                                            FontFamily="fontello"
                                            Color="{StaticResource Tertiary}"
                                            Glyph="{x:Static helpers:IconFontManager.IconDelete}" />
                                    </Image.Source>

                                </Image>
                            </Grid>

                            <Border.GestureRecognizers>

                                <TapGestureRecognizer
                                    Command="{Binding BindingContext.ItemTappedCommand, Source={x:Reference MainViewContainer}}"
                                    CommandParameter="{Binding}" />

                                <DragGestureRecognizer
                                    CanDrag="True"
                                    DragStartingCommand="{Binding BindingContext.ItemDraggedCommand, Source={x:Reference MainViewContainer}}"
                                    DragStartingCommandParameter="{Binding}" />

                                <DropGestureRecognizer
                                    AllowDrop="True"
                                    DragLeaveCommand="{Binding BindingContext.ItemDragLeaveCommand, Source={x:Reference MainViewContainer}}"
                                    DragLeaveCommandParameter="{Binding}"
                                    DragOverCommand="{Binding BindingContext.ItemDraggedOverCommand, Source={x:Reference MainViewContainer}}"
                                    DragOverCommandParameter="{Binding}"
                                    DropCommand="{Binding BindingContext.ItemDroppedCommand, Source={x:Reference MainViewContainer}}"
                                    DropCommandParameter="{Binding}" />

                            </Border.GestureRecognizers>

                        </Border>

                        <Border
                            x:DataType="models:CheckItem"
                            InputTransparent="False"
                            HeightRequest="10"
                            BackgroundColor="{StaticResource Gray300}"
                            HorizontalOptions="FillAndExpand"
                            IsVisible="{Binding IsBeingDraggedOver}"
                            VerticalOptions="FillAndExpand" />

                    </VerticalStackLayout>

                </DataTemplate>
            </CollectionView.ItemTemplate>
            <CollectionView.Footer>
                <Border HeightRequest="40"
                        StrokeThickness="0"/>
            </CollectionView.Footer>
        </CollectionView>

        <Grid
            Grid.Row="1"
            BackgroundColor="Transparent"
            RowDefinitions="1,70"
            ColumnDefinitions="*, *, *, *"
            HorizontalOptions="Fill"
            VerticalOptions="End">

            <Border
                Grid.Row="0"
                Padding="0"
                Grid.ColumnSpan="4"
                BackgroundColor="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray200}}"/>

            <Button Grid.Row="1" Grid.Column="0"
                Style="{StaticResource TabbarButton}"
                Text="{x:Static resources:AppResource.Button_Text_Camera }"
                SemanticProperties.Description="Camera button"
                Command="{Binding CreateListWithCapturedImageCommand}">
                <Button.Behaviors>
                    <toolkit:AnimationBehavior EventName="Clicked">
                        <toolkit:AnimationBehavior.AnimationType>
                            <toolkit:FadeAnimation Opacity="0.5" />
                        </toolkit:AnimationBehavior.AnimationType>
                    </toolkit:AnimationBehavior>
                </Button.Behaviors>
                <Button.ImageSource>
                    <FontImageSource
                        FontFamily="fontello"
                        Size="25"
                        Color="{AppThemeBinding Light={StaticResource PrimaryDarkText}, Dark={StaticResource White}}"
                        Glyph="{x:Static helpers:IconFontManager.IconCamera}" />
                </Button.ImageSource>
            </Button>

            <Button Grid.Row="1" Grid.Column="1"
                Style="{StaticResource TabbarButton}"
                Text="{x:Static resources:AppResource.Button_Text_Image }"
                SemanticProperties.Description="Image selection button"
                Command="{Binding CreateListWithSelectedImageCommand}">
                <Button.Behaviors>
                    <toolkit:AnimationBehavior EventName="Clicked">
                        <toolkit:AnimationBehavior.AnimationType>
                            <toolkit:FadeAnimation Opacity="0.5" />
                        </toolkit:AnimationBehavior.AnimationType>
                    </toolkit:AnimationBehavior>
                </Button.Behaviors>
                <Button.ImageSource>
                    <FontImageSource
                        FontFamily="fontello"
                        Size="25"
                        Color="{AppThemeBinding Light={StaticResource PrimaryDarkText}, Dark={StaticResource White}}"
                        Glyph="{x:Static helpers:IconFontManager.IconPicture}" />
                </Button.ImageSource>
            </Button>

            <Button Grid.Row="1" Grid.Column="2"
                Style="{StaticResource TabbarButton}"
                Text="{x:Static resources:AppResource.Button_Text_Add }"
                SemanticProperties.Description="Add text button"
                Command="{Binding AddItemCommand}">
                <Button.Behaviors>
                    <toolkit:AnimationBehavior EventName="Clicked">
                        <toolkit:AnimationBehavior.AnimationType>
                            <toolkit:FadeAnimation Opacity="0.5" />
                        </toolkit:AnimationBehavior.AnimationType>
                    </toolkit:AnimationBehavior>
                </Button.Behaviors>
                <Button.ImageSource>
                    <FontImageSource
                        FontFamily="fontello"
                        Size="25"
                        Color="{AppThemeBinding Light={StaticResource PrimaryDarkText}, Dark={StaticResource White}}"
                        Glyph="{x:Static helpers:IconFontManager.IconPlus}" />
                </Button.ImageSource>
            </Button>

            <Button Grid.Row="1" Grid.Column="3"
                Style="{StaticResource TabbarButton}"
                Text="{x:Static resources:AppResource.Button_Text_Histroy }"
                SemanticProperties.Description="Show histroy button"
                Command="{Binding GoToHistoryViewCommand}">
                <Button.Behaviors>
                    <toolkit:AnimationBehavior EventName="Clicked">
                        <toolkit:AnimationBehavior.AnimationType>
                            <toolkit:FadeAnimation Opacity="0.5" />
                        </toolkit:AnimationBehavior.AnimationType>
                    </toolkit:AnimationBehavior>
                </Button.Behaviors>
                <Button.ImageSource>
                    <FontImageSource
                        FontFamily="fontello"
                        Size="25"
                        Color="{AppThemeBinding Light={StaticResource PrimaryDarkText}, Dark={StaticResource White}}"
                        Glyph="{x:Static helpers:IconFontManager.IconList}" />
                </Button.ImageSource>
            </Button>



        </Grid>

        <!-- AD Banner -->
        <ads:MTAdView
            Grid.Row="2"
            x:Name="myAds"
            AdsId="{Binding BannerId}"
            AdSize="AnchoredAdaptive"
            IsVisible="true"/>

    </Grid>

</ContentPage>
